name: Autocomment atime-based performance regression analysis on PRs

on:
  pull_request:
    branches:
      - '*'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  comment:
    runs-on: ubuntu-latest
    container: ghcr.io/iterative/cml:0-dvc2-base1

    steps:
    - name: Start timer
      run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV
    
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: safe-dir-check
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global --add safe.directory '*'

    - name: Manage refs
      run: |
        git switch "${GITHUB_BASE_REF}"
        git switch "${GITHUB_HEAD_REF}"
        git for-each-ref --format="%(refname)" | while read ref; do
          git show-ref --quiet --verify $ref 2>/dev/null || git update-ref -d $ref
        done
      shell: bash

    - name: R Setup
      uses: r-lib/actions/setup-r@v2
      with:
        use-public-rspm: true

    - name: Set up the required system dependency libgit2
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libgit2-dev

    - name: Install atime and initiate magic
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}    
      run: |
        Rscript -e '
          r = getOption("repos");
          r["CRAN"] = "http://cran.us.r-project.org";
          options(repos = r);
          install.packages("atime", dependencies = TRUE);
                   '
        END_TIME=$(date +%s)
        echo "END_TIME=${END_TIME}" >> $GITHUB_ENV
          
        Rscript -e '
          start_running_tests <- Sys.time();

          r = getOption("repos");
          r["CRAN"] = "http://cran.us.r-project.org";
          options(repos = r);
          atime::atime_pkg(Sys.getenv("GITHUB_WORKSPACE"));
          
          finish_running_tests <- Sys.time();
          
          tests_time <- ceiling(as.numeric(difftime(finish_running_tests, start_running_tests, units = "secs")));
          
          cat("ATIME_TESTS_RUNTIME=", tests_time, "\\n");
             ' > timings.txt
             
        echo "ATIME_TESTS_RUNTIME=$(awk -F'=' '/ATIME_TESTS_RUNTIME/ {print $2}' timings.txt | xargs | sed 's/ n>//' )" >> $GITHUB_ENV
      shell: bash

    - name: Upload results
      id: artifact-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: atime-results
        path: inst/atime/

    - name: Push generated plot along with relevant information on the PR thread as a GH-bot comment
      env:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
      run: |
        SETUP_DURATION=$((END_TIME - START_TIME))
        echo "![Comparison Plot](./inst/atime/tests_all_facet.png)" >> report.md
        echo "\nGenerated via commit ${{ github.event.pull_request.head.sha }}" >> report.md
        echo "\nDownload link for the artifact containing the test results: [â†“ atime-results.zip](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.artifact-upload-step.outputs.artifact-id }})" >> report.md
        echo "\nTime taken to finish the standard R installation steps: $((SETUP_DURATION%3600/60)) minutes and $((SETUP_DURATION%60)) seconds" >> report.md
        echo "\nTime taken to run \`atime::atime_pkg\` on the tests: $((ATIME_TESTS_RUNTIME%3600/60)) minutes and $((ATIME_TESTS_RUNTIME%60)) seconds" >> report.md
        cml comment update report.md
