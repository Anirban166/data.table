name: Autocomment atime-based performance regression analysis on PRs

on:
  pull_request:
    branches:
      - '*'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  comment:
    runs-on: ubuntu-latest
    container: ghcr.io/iterative/cml:0-dvc2-base1

    steps:
    - name: Start timer
      run: echo "START_SETUP_TIME=$(date +%s)" >> $GITHUB_ENV
    
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: safe-dir-check
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global --add safe.directory '*'

    # Required for operations requiring a full git history or checks between branches.
    - name: Manage refs
      run: |
        git switch "${GITHUB_BASE_REF}"
        git switch "${GITHUB_HEAD_REF}"
        git for-each-ref --format="%(refname)" | while read ref; do
          git show-ref --quiet --verify $ref 2>/dev/null || git update-ref -d $ref
        done
      shell: bash

    - name: R Setup
      uses: r-lib/actions/setup-r@v2
      with:
        use-public-rspm: true

    - name: Set up the required system dependency libgit2
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libgit2-dev

    - name: Install atime and initiate magic
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}    
      run: |
        echo "Sys.setenv(R_PROFILE_LOADED = 'TRUE')" >> /github/home/.Rprofile
        echo "options(repos = c(CRAN = 'https://cloud.r-project.org'))" >> /github/home/.Rprofile
        Rscript -e 'Sys.getenv("R_PROFILE_LOADED")'

        Rscript -e 'options(repos = c(CRAN = "http://cloud.r-project.org")); install.packages("atime", dependencies = TRUE);'
        echo "END_SETUP_START_TESTS_TIME=$(date +%s)" >> $GITHUB_ENV
        Rscript -e 'options(repos = c(CRAN = "http://cloud.r-project.org")); atime::atime_pkg(Sys.getenv("GITHUB_WORKSPACE"));'
        echo "END_TESTS_TIME=$(date +%s)" >> $GITHUB_ENV
      shell: bash

    - name: Upload results
      id: artifact-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: atime-results
        path: inst/atime/

    - name: Push generated plot along with relevant information on the PR thread as a GH-bot comment
      env:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
      run: |
        SETUP_DURATION=$((END_SETUP_START_TESTS_TIME - START_SETUP_TIME))
        ATIME_TESTS_DURATION=$((END_TESTS_TIME - END_SETUP_START_TESTS_TIME))
        
        formatTime() {
            local totalSeconds=$1
            if [ $totalSeconds -lt 0 ]; then
                echo "Time calculation error: negative duration"
                return
            fi
            local minutes=$((totalSeconds / 60))
            local seconds=$((totalSeconds % 60))
            echo "${minutes} minutes and ${seconds} seconds"
        }        
        
        # Define a shell function to do the modular arithmetic
        echo "![Comparison Plot](./inst/atime/tests_all_facet.png)" >> report.md
        echo "\nGenerated via commit ${{ github.event.pull_request.head.sha }}" >> report.md
        echo "\nDownload link for the artifact containing the test results: [â†“ atime-results.zip](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.artifact-upload-step.outputs.artifact-id }})" >> report.md
        echo "\nTime taken to finish the standard R installation steps: $(formatTime $SETUP_DURATION)" >> report.md
        echo "\nTime taken to run \`atime::atime_pkg\` on the tests: $(formatTime $ATIME_TESTS_DURATION)" >> report.md
        cml comment update report.md
